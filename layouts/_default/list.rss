{{ printf `<?xml version="1.0" encoding="utf-8"?>` | safeHTML }} {{/* ref: https://validator.w3.org/feed/docs/rss2.html */}}
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    {{ with site.LanguageCode }} xml:lang="{{ . }}"{{ end }}>
    <channel>
        <generator>Hugo v{{ hugo.Version }} -- https://gohugo.io/</generator>
        {{- $title := site.Title -}}
        {{- with .Title -}}
            {{- if (not (eq . site.Title)) -}}
                {{- $title = printf `%s %s %s` . (i18n "feed_title_on" | default "on") site.Title -}}
            {{- end -}}
        {{- end -}}
        {{- if .IsTranslated -}}
            {{ $title = printf "%s (%s)" $title (index site.Data.i18n.languages .Lang) }}
        {{- end -}}
        <title>{{ printf `%s` $title | html }}</title>
        {{ with (or (.Param "subtitle") (.Param "tagline")) }}
            <description>{{ printf `%s` . | html }}</description>
        {{ end }}
        <link>{{ .Permalink }}</link>
        {{ $output_formats := .OutputFormats }}
        {{ range $output_formats -}}
            {{- $rel := (or (and (eq "rss" (.Name | lower)) "self") "alternate") -}}
            {{ with $output_formats.Get .Name }}
                {{ printf `<atom:link href=%q rel=%q type=%q title=%q />` .Permalink $rel .MediaType.Type .Name | safeHTML }}
            {{- end -}}
        {{- end }}
        {{- range .Translations }}
            {{ $output_formats := .OutputFormats }}
            {{- $lang := .Lang }}
            {{- $langstr := index site.Data.i18n.languages .Lang }}
            {{ range $output_formats -}}
                {{ with $output_formats.Get .Name }}
                    {{ printf `<atom:link href=%q rel="alternate" type=%q hreflang=%q title="[%s] %s" />` .Permalink .MediaType.Type $lang $langstr .Name | safeHTML }}
                {{- end -}}
            {{- end }}
        {{- end }}
        <lastBuildDate>{{ now.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>
        {{ with site.Copyright }}
            {{- $copyright := replace . "{year}" now.Year -}} {{/* In case the site.copyright uses a special string "{year}" */}}
            {{- $copyright = replace $copyright "&copy;" "Â©" -}}
            <copyright>{{ $copyright | plainify }}</copyright>
        {{- end }}
        {{ with .Param "feed" }}
            {{/* For this to work, the $logo file should be present in the assets/ directory */}}
            {{- $logo := .logo | default "logo.svg" -}}
            {{- with resources.Get $logo -}}
                <image>
                    <link>{{ $.Permalink }}</link>
                    <title>{{ printf `%s` $title | html }}</title>
                    <url>{{ (. | fingerprint).Permalink }}</url>
                    {{ with (or (site.Param "subtitle") (site.Param "tagline")) }}
                        <description>{{ printf `%s` . | html }}</description>
                    {{ end }}
                </image>
            {{- end }}
        {{ end }}
        {{ with site.Author.email -}}
            <managingEditor>
                {{- . }}{{ with site.Author.name }} ({{ . }}){{ end -}}
            </managingEditor>
        {{- end }}
        {{- with site.LanguageCode }}
            <language>{{ . }}</language>
        {{end -}}
        {{- $limit := (cond (le site.Config.Services.RSS.Limit 0) 65536 site.Config.Services.RSS.Limit) }}
        {{- $feed_sections := site.Params.feedSections | default site.Params.mainSections -}}
        {{/* Range through only the pages with a Type in $feed_sections. */}}
        {{- $pages := where .Pages "Type" "in" $feed_sections -}}
        {{/* Remove the pages that have the disable_feed parameter set to true. */}}
        {{- $pages = where $pages ".Params.disable_feed" "!=" true -}}
        {{- range first $limit $pages }}
            {{ $page := . }}
            <item>
                <title>{{ printf `%s` .Title | html }}</title>
                <link>{{ .Permalink }}?utm_source=rss_feed</link>
                <atom:link href="{{ .Permalink }}?utm_source=rss_feed" rel="alternate" type="text/html" />
                {{- range .Translations }}
                    {{- $link := printf "%s?utm_source=rss_feed" .Permalink | safeHTML }}
                    {{- printf `<atom:link href=%q rel="alternate" type="text/html" hreflang=%q />` $link .Lang | safeHTML }}
                {{- end }}
                {{/* rel=related: See https://validator.w3.org/feed/docs/atom.html#link */}}
                {{- range first 5 (site.RegularPages.Related .) }}
                    <atom:link href="{{ .Permalink }}?utm_source=rss_feed" rel="related" type="text/html" title="{{ .Title }}" />
                {{- end }}
                {{ with .Params.id }}
                    <guid isPermaLink="false">{{ . | plainify }}</guid>
                {{ else }}
                    <guid>{{ .Permalink }}</guid>
                {{ end }}
                {{ with .Params.author -}}
                    {{- range . -}} <!-- Assuming the author front-matter to be a list -->
                        {{ if .email -}}
                            <author>
                                {{- .email }}{{ with .name }} ({{ . }}){{ end -}}
                            </author>
                        {{- else -}}
                            {{ with .name -}}
                                <dc:creator>
                                    {{- . -}}
                                </dc:creator>
                            {{- end -}}
                        {{- end -}}
                    {{- end -}}
                {{- end }}
                <pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
                {{- $description := "" -}}
                {{- with .Description -}}
                    {{- $description = . -}}
                {{- else -}}
                    {{- with .Summary -}}
                        {{- $description = . -}}
                    {{- end -}}
                {{- end -}}
                {{- $description = (cond (eq "" $description) "" ($description | markdownify | emojify)) -}}
                {{- $content := .Content -}}
                {{- $subtitle := "" -}}
                {{- with .Params.subtitle -}}
                    {{ $subtitle = . -}}
                    {{ $content = printf `<h2>%s</h2>%s` $subtitle $content | safeHTML -}}
                {{- end -}}
                {{- $description = (cond (eq "" $description) "" ($description | markdownify | emojify)) -}}
                {{- $continue := i18n "feed_item_summary_readmore" | default "Read&nbsp;more&nbsp;&#8230;" -}}
                {{- $link := printf `%s?utm_source=rss_feed` .Permalink -}}
                {{- $continue = printf `<p><a href=%q>%s</a></p>` $link $continue | safeHTML -}}
                {{ with .Params.disable_feed_content }}
                    {{ if ne "" $description }}
                        {{ if ne "" $subtitle }}
                            {{- $description = printf `<h2>%s</h2>%s` $subtitle $description | safeHTML -}}
                        {{ end }}
                        {{ printf `<description><![CDATA[%s<p>&nbsp;</p>%s]]></description>` $description $continue | safeHTML -}}
                    {{ else }}
                        {{ if ne "" $subtitle }}
                            {{ printf `<description><![CDATA[<p>%s</p><p>&nbsp;</p>%s]]></description>` $subtitle $continue | safeHTML }}
                        {{ else }}
                            {{ printf `<description><![CDATA[%s]]></description>` $continue | safeHTML }}
                        {{ end }}
                    {{ end }}
                {{ else }}
                    {{ if eq "" $description }}
                        {{ if ne "" $content }}
                            {{ printf `<description><![CDATA[%s]]></description>` $content | safeHTML }}
                        {{ else }}
                            {{ if ne "" $subtitle }}
                                {{ printf `<description><![CDATA[<p>%s</p><p>&nbsp;</p>%s]]></description>` $subtitle $continue | safeHTML }}
                            {{ else }}
                                {{ printf `<description><![CDATA[%s]]></description>` $continue | safeHTML }}
                            {{ end }}
                        {{ end }}
                    {{ else if eq "" $content }}
                        {{ if ne "" $subtitle }}
                            {{- $description = printf `<h2>%s</h2>%s` $subtitle $description | safeHTML -}}
                        {{ end }}
                        {{ printf `<description><![CDATA[%s<p>&nbsp;</p>%s]]></description>` $description $continue | safeHTML -}}
                    {{ else }}
                        {{ printf `<description><![CDATA[%s]]></description>` $description | safeHTML }}
                        {{ printf `<content:encoded><![CDATA[%s]]></content:encoded>` $content | safeHTML }}
                    {{ end }}
                {{ end }}
                {{ with site.Taxonomies }}
                    {{ range $taxo,$_ := . }} <!-- Defaults taxos: "tags", "categories" -->
                        {{ with $page.Param $taxo }}
                            {{ $taxo_list := . }} <!-- $taxo_list will be the tags/categories list -->
                            {{ with site.GetPage (printf "/%s" $taxo) }}
                                {{ $taxonomy_page := . }}
                                {{ range $taxo_list }} <!-- Below, assuming pretty URLs -->
                                    <category domain="{{ printf "%s" $taxo | humanize }}">{{ . }}</category>
                                {{ end }}
                            {{ end }}
                        {{ end }}
                    {{ end }}
                {{ end }}
            </item>
        {{ end }}
    </channel>
</rss>
